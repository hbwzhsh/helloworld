TypedActorExample{
  defaultDispatcher {
  	 type = Dispatcher
  	 executor = "fork-join-executor"
  	 fork-join-executor {
       		parallelism-min = 2
    	    parallelism-factor = 2.0
		    parallelism-max = 4
  	  }
  }
}

MyDispatcherExample{
  defaultDispatcher {
    type = Dispatcher
    executor = "fork-join-executor"
    fork-join-executor {
      parallelism-min = 2
      parallelism-factor = 2.0
      parallelism-max = 6
    }
  }

  defaultDispatcher1 {
    type = Dispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
      core-pool-size-min = 1
      core-pool-size-factor = 2.0
      core-pool-size-max = 6
    }
  }
  pinnedDispatcher {
    type = PinnedDispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
      core-pool-size-min = 2
      core-pool-size-factor = 2.0
      core-pool-size-max = 10
    }
    throughput = 5
  }
  balancingDispatcher {
    type = BalancingDispatcher
    executor = "thread-pool-executor"
    thread-pool-executor {
      core-pool-size-min = 1
      core-pool-size-factor = 2.0
      core-pool-size-max = 2
    }
    throughput = 5
  }
  balancingDispatcher1 {
    type = BalancingDispatcher
    executor = "fork-join-executor"
    fork-join-executor {
      parallelism-min = 2
      parallelism-factor = 2.0
      parallelism-max = 6
    }
    throughput = 5
  }
  CallingThreadDispatcher {
    type = akka.testkit.CallingThreadDispatcherConfigurator
  }
}

MyRouterExample{
  akka.actor.deployment {
    /myRandomRouterActor {
      router = random
      nr-of-instances = 5
    }
  }
  akka {
    actor {
      provider = "akka.remote.RemoteActorRefProvider"
    }
    remote {
      transport = "akka.remote.netty.NettyRemoteTransport"
      netty {
        hostname = "127.0.0.1"
        port = 2552
      }
    }
  }
}

SupervisorSys {
  akka {
    mode = test
    event-handlers = ["akka.testkit.TestEventListener"]
    loglevel = DEBUG
    actor {
      debug {
        receive = on
        autoreceive = on
        lifecycle = on
      }
    }
  }
}

ServerSys {
  include "com.github.kowshik.bigo.common"
  akka {
    actor {
      provider = "akka.remote.RemoteActorRefProvider"
    }
    remote {
      transport = "akka.remote.netty.NettyRemoteTransport"
      netty {
        hostname = "127.0.0.1"
        port = 2552
      }
    }
  }
}

ClientSys {
  include "com.github.kowshik.bigo.common"
  akka {
    actor {
      provider = "akka.remote.RemoteActorRefProvider"

      deployment {
        /remoteServerActor {
          remote = "akka://ServerSys@127.0.0.1:2552"
        }
      }
    }
  }
}

LocalSys {
  akka {
    actor {
      provider = "akka.remote.RemoteActorRefProvider"
    }
  }
}
RemoteSys {
  akka {
    actor {
      provider = "akka.remote.RemoteActorRefProvider"
    }
    remote {
      transport = "akka.remote.netty.NettyRemoteTransport"
      netty {
        hostname = "localhost"
        port = 2552
      }
    }
  }
}

WorkServerSys {
  include "com.github.kowshik.bigo.common"
  akka {
    actor {
      provider = "akka.remote.RemoteActorRefProvider"
    }
    remote {
      transport = "akka.remote.netty.NettyRemoteTransport"
      netty {
        hostname = "127.0.0.1"
        port = 2552
      }
    }
  }
  priorityMailBox-dispatcher {
    mailbox-type = "org.akka.essentials.grid.controller.WorkServerActorSystem$MyUnboundedPriorityMailbox"
  }
}

WorkerSys1 {
  include "com.github.kowshik.bigo.common"
  akka {
    actor {
      provider = "akka.remote.RemoteActorRefProvider"
    }
    remote {
      transport = "akka.remote.netty.NettyRemoteTransport"
      netty {
        hostname = "127.0.0.1"
        port = 2553
      }
    }
  }
}

WorkerSys2 {
  include "com.github.kowshik.bigo.common"
  akka {
    actor {
      provider = "akka.remote.RemoteActorRefProvider"
    }
    remote {
      transport = "akka.remote.netty.NettyRemoteTransport"
      netty {
        hostname = "127.0.0.1"
        port = 2554
      }
    }
  }
}

WorkerSys3 {
  include "com.github.kowshik.bigo.common"
  akka {
    actor {
      provider = "akka.remote.RemoteActorRefProvider"
    }
    remote {
      transport = "akka.remote.netty.NettyRemoteTransport"
      netty {
        hostname = "127.0.0.1"
        port = 2555
      }
    }
  }
}


akka {
  log-config-on-start = off
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  actor {
    provider = "akka.remote.RemoteActorRefProvider"
    debug {
      receive = on
      autoreceive = on
      lifecycle = on
      unhandled = on
    }
    deployment {
      /buffer/client {
        remote = "akka.tcp://RandomOrgSystem@127.0.0.1:2552"
      }
    }
  }
  remote {
    transport = "akka.remote.netty.NettyRemoteTransport"
    log-sent-messages = on
    netty {
      hostname = "127.0.0.1"
    }
  }
}

akka {
  log-config-on-start = on
  actor {
    deployment {
      tubeStation/machineRouter {
        router = balancing-pool
        nr-of-instances = 5
      }
    }
  }
}
queue-sample {
  # Tube station open timespan (in seconds)
  tubestation-lifespan = 600
  # Turn to on to use pre-sampled durations, otherwise will be sampled dynmaically
  use-sample-duration = on
  # One new client arrives every 20s on average
  avg-customer-arrival-rate = 0.05
  # One client takes 1mn30 processing on average
  avg-customer-processing-duration = 0.011
  # Turn to on to use pre-sampled inter-arrivals of customers, otherwise will be sampled dynmaically
  use-sample-arrival = on
}